#jinja2: lstrip_blocks: "True"
ingress:
  enabled: false

experienceApiClientSecret: &experienceApiClientSecret "38f84299-d9b4-4d4e-a195-c1996d028406"

frontendRootUrl: &frontendRootUrl "https://portal.{{ item.key }}.{{ item.value.pm4ml_subdomain }}/"
frontendBaseUrl: &frontendBaseUrl "https://experience-api.{{ item.key }}.{{ item.value.pm4ml_subdomain }}/"

# this needs to have external URLs of both the UI and experience API
frontendRedirectUris: &frontendRedirectUris
  - "https://portal.{{ item.key }}.{{ item.value.pm4ml_subdomain }}/*"
  - "https://experience-api.{{ item.key }}.{{ item.value.pm4ml_subdomain }}/*"

# this _should_ be set to only allow requests from known origins
frontendWebOrigins: &frontendWebOrigins
  - "*"

# this should be set to the FSPID assigned by the mojaloop hub to this DFSP
dfspId: &dfspId "{{ item.value.dfsp_id }}"

frontend:
  env:
    API_BASE_URL: "https://experience-api.{{ item.key }}.{{ item.value.pm4ml_subdomain }}"
  ingress:
    enabled: true
    hosts:
      - host: "portal.{{ item.key }}.{{ item.value.pm4ml_subdomain }}"
        paths: ['/']
    annotations:
      kubernetes.io/ingress.class: {{ pm4ml_ingress_classname }}
      {% if internal_managed_tls == "yes" %}
      cert-manager.io/cluster-issuer: letsencrypt
      {% endif %}
      external-dns.alpha.kubernetes.io/target: {{ dfsp_access_lb_hostname }}
      nginx.ingress.kubernetes.io/rewrite-target: /
    tls:
    {% if internal_managed_tls == "yes" %}
    - secretName: pm4ml-tls
    {% else %}
    - secretName: ca-key-pair
    {% endif %}
      hosts:
        - "*.{{ item.key }}.{{ item.value.pm4ml_subdomain }}"

experience-api:
  env:
    enableMockData: false
    managementEndPoint: "{{ item.value.helm_release_name }}-management-api"
    dfspId: *dfspId
    appKeys: ootu1yoo5geeS7izai4ox1Yae1Eey6ai
    authClientSecret: *experienceApiClientSecret
    metricsEndPoint: "{{ item.value.helm_release_name }}-prometheus-server"
    authDiscoveryEndpoint: "http://{{ [item.value.helm_release_name, "-keycloak"] | join | truncate(20,true,'',0)}}-http/auth/realms/pm4ml/.well-known/openid-configuration"
    # this should be set to the external URL of the auth endpoint on the experience API
    authRedirectUri: "https://experience-api.{{ item.key }}.{{ item.value.pm4ml_subdomain }}/auth"
    # this should be set to the external URL of the UI
    authLoggedInLandingUrl: "https://portal.{{ item.key }}.{{ item.value.pm4ml_subdomain }}/"
    authSessionSecure: false
  ingress:
    enabled: true
    hosts:
      - host: "experience-api.{{ item.key }}.{{ item.value.pm4ml_subdomain }}"
        paths: ['/']
    annotations:
      kubernetes.io/ingress.class: {{ pm4ml_ingress_classname }}
      {% if internal_managed_tls == "yes" %}
      cert-manager.io/cluster-issuer: letsencrypt
      {% endif %}
      external-dns.alpha.kubernetes.io/target: {{ dfsp_access_lb_hostname }}
      nginx.ingress.kubernetes.io/rewrite-target: /
    tls:
    {% if internal_managed_tls == "yes" %}
    - secretName: pm4ml-tls
    {% else %}
    - secretName: ca-key-pair
    {% endif %}
      hosts:
        - "*.{{ item.key }}.{{ item.value.pm4ml_subdomain }}"

management-api:
  serviceAccountName: {{ item.key }}-vault-pm4ml-auth
  env:
    CACHE_URL: redis://redis-master:6379
    DFSP_ID: *dfspId
    MCM_SERVER_ENDPOINT: "{{ item.value.mcm_host_url }}/api"
    MCM_CLIENT_REFRESH_INTERVAL: 60
    PRIVATE_KEY_LENGTH: 2048
    PRIVATE_KEY_ALGORITHM: rsa
    WS_URL: "{{ item.value.helm_release_name }}-pm4ml-mojaloop-connector"
    WS_PORT: 4003
    AUTH_ENABLED: {{ item.value.mcm_auth_enabled }}
    AUTH_USER: {{ item.value.mcm_auth_user }}
    AUTH_PASS: {{ item.value.mcm_auth_pass }}
    MCM_CLIENT_SECRETS_LOCATION: /tls
    VAULT_ENDPOINT: http://vault.default.svc.cluster.local:8200
    VAULT_AUTH_METHOD: K8S
    VAULT_K8S_ROLE: {{ item.key }}-vault-pm4ml-auth
    VAULT_K8S_TOKEN_FILE: /var/run/secrets/kubernetes.io/serviceaccount/token
    VAULT_PKI_SERVER_ROLE: {{ item.key }}.{{ base_domain }}
    VAULT_PKI_CLIENT_ROLE: {{ item.key }}.{{ base_domain }}
    VAULT_MOUNT_PKI: pki-{{ base_domain }}-{{ item.key }}
    VAULT_MOUNT_KV: secrets/pm4ml/{{ item.key }}
    MOJALOOP_CONNECTOR_FQDN: "connector.{{ item.key }}.{{ item.value.pm4ml_subdomain }}"
    CERT_MANAGER_ENABLED: true
    CERT_MANAGER_SERVER_CERT_SECRET_NAME: mojaloop-connector-tls
    CERT_MANAGER_SERVER_CERT_SECRET_NAMESPACE: {{ item.key }}
  ingress:
    enabled: false

prometheus:
  server:
    persistentVolume:
      enabled: false
  alertmanager:
    persistentVolume:
      enabled: false
  pushgateway:
    persistentVolume:
      enabled: false
  extraScrapeConfigs: |-
    - job_name: 'prometheus-blackbox-exporter'
      static_configs:
        - targets:
          - "{{ item.value.helm_release_name }}-pm4ml-mojaloop-connector:4004"

mojaloop-core-connector:
  ingress:
    enabled: true
    hosts:
      - host: "core-connector.{{ item.key }}.{{ item.value.pm4ml_subdomain }}"
        paths:
          - path: "/"
            servicePort: http
    annotations:
      kubernetes.io/ingress.class: {{ pm4ml_ingress_classname }}
      external-dns.alpha.kubernetes.io/target: {{ dfsp_access_lb_hostname }}
      nginx.ingress.kubernetes.io/rewrite-target: /
      {% if internal_managed_tls == "yes" %}
      cert-manager.io/cluster-issuer: letsencrypt
      {% endif %}
    tls:
    {% if internal_managed_tls == "yes" %}
    - secretName: pm4ml-tls
    {% else %}
    - secretName: ca-key-pair
    {% endif %}
      hosts:
        - "*.{{ item.key }}.{{ item.value.pm4ml_subdomain }}"

pm4ml-mojaloop-connector:
  env:
    DFSP_ID: *dfspId
    CACHE_HOST: redis-master
    JWS_SIGN: true
    VALIDATE_INBOUND_JWS: true
    PEER_ENDPOINT: "{{ item.value.extgw_fqdn }}:{{ mojaloop_switch_extgw_port }}/fsp/1.0"
    OUTBOUND_MUTUAL_TLS_ENABLED: true
    INBOUND_MUTUAL_TLS_ENABLED: false
    OAUTH_TOKEN_ENDPOINT: "https://{{ item.value.extgw_fqdn }}:{{ mojaloop_switch_extgw_port }}/token"
    OAUTH_CLIENT_KEY: "{{ item.value.extgw_client_key }}"
    OAUTH_CLIENT_SECRET: "{{ item.value.extgw_client_secret }}"
    BACKEND_ENDPOINT: "{{ item.value.helm_release_name }}-mojaloop-core-connector:3003"
    MGMT_API_WS_URL: "{{ item.value.helm_release_name }}-management-api"

  ingress:
    enabled: true
    hosts:
      - host: "connector.{{ item.key }}.{{ item.value.pm4ml_subdomain }}"
    annotations:
      kubernetes.io/ingress.class: {{ ext_ingress_classname }}
      #cert-manager.io/cluster-issuer: vault-issuer-{{ item.key }}
      external-dns.alpha.kubernetes.io/target: {{ switch_access_lb_hostname }}
      nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
      nginx.ingress.kubernetes.io/auth-tls-secret: "{{ item.key }}/mojaloop-connector-tls"
    tls:
    - secretName: mojaloop-connector-tls
      hosts:
        - "connector.{{ item.key }}.{{ item.value.pm4ml_subdomain }}"

ttk:
  enabled: {{ item.value.ttk_enabled }}

keycloak:
  ingress:
    enabled: true
    rules:
      -
        # Ingress host
        host: "keycloak.{{ item.key }}.{{ item.value.pm4ml_subdomain }}"
        # Paths for the host
        paths:
          - /
    annotations:
      kubernetes.io/ingress.class: {{ pm4ml_ingress_classname }}
      {% if internal_managed_tls == "yes" %}
      cert-manager.io/cluster-issuer: letsencrypt
      {% endif %}
      external-dns.alpha.kubernetes.io/target: {{ dfsp_access_lb_hostname }}
    tls:
    {% if internal_managed_tls == "yes" %}
    - secretName: pm4ml-tls
    {% else %}
    - secretName: ca-key-pair
    {% endif %}
      hosts:
        - "*.{{ item.key }}.{{ item.value.pm4ml_subdomain }}"
  extraVolumes: |
    - name: realm-config
      # the below should be set to the name of the keycloak realm config map
      # this has the deployment name on the front but because helm is so horrible
      # we cant get the deployment name here in a nice way. You have to plug it
      # in manually. e.g. the below works for a deployment called "pm4ml"
      configMap:
        name: {{ item.key }}-keycloak-realm
  extraEnv: |
    - name: KEYCLOAK_USER
      value: admin
    - name: KEYCLOAK_IMPORT
      value: /realm/realm.json
    # the below should be set to the external URL of keycloak
    - name: KEYCLOAK_FRONTEND_URL
      value: "https://keycloak.{{ item.key }}.{{ item.value.pm4ml_subdomain }}/auth"
    - name: KEYCLOAK_PASSWORD
      value: ##KEYCLOAK_PASSWORD##
sim-backend:
  enabled: true
  env:
    OUTBOUND_ENDPOINT: http://{{ item.value.helm_release_name }}-mojaloop-connector:4001
    DFSP_ID: *dfspId
  ingress:
    enabled: false
testIngress:
  enabled: true
  simBackendServiceName: "sim-backend"
  coreConnectorServiceName: "{{ item.value.helm_release_name }}-mojaloop-core-connector"
  mojaloopConnectorServiceName: "{{ item.value.helm_release_name }}-pm4ml-mojaloop-connector"
  hosts:
    - host: "test.{{ item.key }}.{{ item.value.pm4ml_subdomain }}"
  annotations:
    kubernetes.io/ingress.class: {{ pm4ml_ingress_classname }}
    external-dns.alpha.kubernetes.io/target: {{ dfsp_access_lb_hostname }}
